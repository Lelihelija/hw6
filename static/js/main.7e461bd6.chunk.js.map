{"version":3,"sources":["posts/img/bokuto.jpg","posts/img/kageyamaLogo.jpg","images/chat.svg","images/reload.svg","images/heart.svg","images/download.svg","posts/img/1.jpg","posts/img/2.jpg","posts/img/kurooLogo.png","posts/img/3.jpg","posts/img/4.jpg","posts/post.js","redux/add-post-action.js","redux/types.js","posts/newPostForm.js","posts/posts.js","App.js","serviceWorker.js","redux/add-post-reducer.js","store.js","redux/post-interactions-reducer.js","index.js"],"names":["module","exports","Post","name","photo","nickname","content","image","date","comments","shares","likes","downloads","className","src","alt","day","text","CommentsIcon","quantity","SharesIcon","LikesIcon","DownloadsIcon","addPost","post","type","payload","users","isActive","id","username","NewPostForm","state","selectName","event","setState","currentTarget","value","selectImage","typedText","addNewPostFn","e","props","onChange","this","bind","map","user","index","key","placeholder","list","rows","onClick","Component","connect","addPostReducer","dispatch","Posts","authors","useSelector","author","App","Boolean","window","location","hostname","match","initialAuthorState","bokutoPhoto","initialState","img1","kurooPhoto","img2","kageyamaPhoto","img3","img4","reducer","combineReducers","action","postInteractionsReducer","newState","element","rights","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7e461bd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bokuto.2e0a7026.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kageyamaLogo.60e3e4af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chat.4ca10945.svg\";","module.exports = __webpack_public_path__ + \"static/media/reload.066d8846.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart.aa7b03b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/download.2e61c3f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.3f90cae0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.64d3323b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kurooLogo.04952816.png\";","module.exports = __webpack_public_path__ + \"static/media/3.8dc229c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.73c9e966.jpg\";","import React from 'react';\r\nimport './styles.css';\r\n\r\nimport CommentsIcon from '../images/chat.svg';\r\nimport SharesIcon from '../images/reload.svg';\r\nimport LikesIcon from '../images/heart.svg';\r\nimport DownloadsIcon from '../images/download.svg';\r\n\r\n\r\nconst Post  = ({name, photo, nickname, content, image, date, comments, shares, likes, downloads}) => {\r\n    \r\n    return (\r\n        <div className=\"post-wrapper\">\r\n            <div className=\"author\">\r\n                <img src={photo} className=\"logo\" alt=\"logo\"></img>\r\n                <div className=\"text-wrapper\">\r\n                    <p className=\"text\"> {name} <span className=\"nickname-date\"> {nickname}  Â· {date.day} </span><br/> \r\n                        <span className=\"content-text\">{content.text}</span></p>\r\n                    <div className=\"img-post-container\">\r\n                    <img src={image.src} className=\"img-post\" alt=\"post\"></img>\r\n                     </div>\r\n                    <div className=\"posts-interaction-wrapper\">\r\n                        <div className=\"posts-interaction-comments posts-interaction-items\">\r\n                            <img src={CommentsIcon} className=\"comment-icon icon\" alt=\"comment icon\"/>\r\n                            {comments.quantity}\r\n                        </div>\r\n                        <div className=\"posts-interaction-share posts-interaction-items\">\r\n                            <img src={SharesIcon} className=\"share-icon icon\" alt=\"share icon\"/>\r\n                            {shares.quantity}\r\n                        </div>\r\n                        <div className=\"posts-interaction-likes posts-interaction-items\">\r\n                            <img src={LikesIcon} className=\"likes-icon icon posts-interaction-items\" alt=\"likes icon\"/>\r\n                            {likes.quantity}\r\n                        </div>\r\n                        <div className=\"posts-interaction-download posts-interaction-items\">\r\n                            <img src={DownloadsIcon} className=\"download-icon icon\" alt=\"download icon\"/>\r\n                            {downloads.quantity}\r\n                        </div>\r\n                    </div> \r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Post;\r\n","import { ADD_POST } from \"./types\";\r\n\r\nconst addPost = ( post ) => {\r\n    return {\r\n        type: ADD_POST,\r\n        payload: post,\r\n    }\r\n}\r\n\r\nexport default addPost;","export const ADD_POST = 'ADD_POST';\r\nexport const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import addPostReducer from '../redux/add-post-reducer';\r\nimport addPost from '../redux/add-post-action';\r\nimport {passNewDataToPost, selectName} from '../redux/post-interactions-action';\r\n\r\nlet users = [\r\n    {\r\n        isActive: 'false',\r\n        id: 5,\r\n        username: 'Ð¥ÑÐ½Ð°ÑÐ° ÐÐ²Ð°Ð½Ð¾Ð²Ð¸Ñ',\r\n    },\r\n    {\r\n        isActive: 'false',\r\n        id: 6,\r\n        username: 'Ð¦ÑÐºÑ ÐÑÐ¸Ð³Ð¾ÑÐ¾Ð²Ð¸Ñ',\r\n    },\r\n    {\r\n        isActive: 'false',\r\n        id: 7,\r\n        username: 'ÐÐ°ÑÑÑ ÐÐ¸ÑÐ¾ÑÐ»Ð°Ð²Ð¾Ð²Ð¸Ñ',\r\n    },\r\n    {\r\n        isActive: 'false',\r\n        id: 8,\r\n        username: 'Ð® ÐÑÑÐ¸Ð½Ð¾Ñ ÐÐ°ÑÑÐºÐ¾Ð²Ð¸Ñ',\r\n    },\r\n];\r\n\r\n// let date = setDate();\r\n\r\nclass NewPostForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        content: {\r\n            text: \"\",\r\n          },\r\n          image: {\r\n            src: \"\",\r\n          },\r\n        //   date: setDate(),\r\n      };\r\n    \r\n    selectName = (event) => {\r\n        this.setState({\r\n          name: event.currentTarget.value,\r\n        });\r\n    };\r\n    \r\n    selectImage = (event) => {\r\n        this.setState({ image: { ...this.state.image, src: event.currentTarget.value,} });\r\n    };\r\n\r\n    typedText = (event) => {\r\n        this.setState({ content: { ...this.state.content, text: event.currentTarget.value,} });\r\n    };\r\n\r\n    addNewPostFn = (e) => {\r\n        this.props.addPost(this.state);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"new-post-form-wrapper\">\r\n                <div className=\"inputs-wrapper\">\r\n                    <div className=\"new-user-post\">\r\n                        <label className=\"new-user-label\">Choose a username:</label>\r\n                        <select className=\"new-user-option\" onChange={this.selectName.bind(this)} value={this.state.name} name=\"user\" id=\"users\">\r\n                            {users.map((user,index) => (\r\n                                <option className=\"new-user-option\"  key={user.id} state={user.isActive} >{user.username}</option>\r\n                            ))}\r\n                        </select>\r\n                        <input className=\"new-post-items image-link\" onChange={this.selectImage.bind(this)} value={this.state.image.src} type=\"url\" name=\"url\" placeholder=\"Paste a photo link here or choose one\" list=\"defaultURLs\"/>\r\n                        <datalist id=\"defaultURLs\">\r\n                            <option value=\"https://s.yimg.com/aah/computergear/r2d2-dalek-loved-star-trek-t-shirt-26.gif\"/>\r\n                            <option value=\"https://www.geekalerts.com/u/Doctor-Who-Star-Wars-Darthmen-T-Shirt.jpg\"/>\r\n                            <option value=\"https://i.pinimg.com/originals/80/8b/ce/808bce96f0e3b7149bbae9a81c307e21.png\"/>\r\n                        </datalist>\r\n                        <textarea className=\"textarea new-post-items\" name=\"addText\" id=\"\" onChange={this.typedText.bind(this)} value={this.state.content.text} rows=\"5\" placeholder=\"type your message here\"></textarea>\r\n   {/* onChange={(e) => this.props.addPost(e.target.value)}  */}\r\n                    </div>\r\n                    <div className=\"new-post-btn-wrapper\">\r\n                        <button type=\"button\" className=\"new-post-btn new-post-items\" onClick={this.addNewPostFn}>Add new post</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst getStateToProps = (state) => {\r\n    return {\r\n        post: state.addPostReducer,\r\n        // data: state.getNewDataReducer,\r\n    }\r\n}\r\n\r\nconst getDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: e => dispatch(addPost(e)),\r\n        // passNewDataToPost: () => dispatch(passNewDataToPost())\r\n    }\r\n}\r\n\r\nexport default connect(getStateToProps, getDispatchToProps)(NewPostForm);","import React from \"react\";\r\nimport Post from './post.js'\r\nimport './styles.css';\r\nimport NewPostForm from './newPostForm';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst Posts = () => {\r\n\t\r\n\tlet authors = useSelector(state => state.addPostReducer.authors);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"posts-wrapper\">\r\n\t\t\t\t<NewPostForm/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"posts-wrapper\">\r\n\t\t\t\t{ authors.map((author, index) => <Post key={index} {...author}/>)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t) \r\n}; \r\n\r\nexport default Posts;","import React from 'react';\nimport './App.css';\nimport Posts from './posts/posts.js'\n\n\nfunction App() {\n  \treturn (\n\t\t<div className=\"App\">\n\t\t\t<Posts/>\n\t\t</div>\n  \t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_POST } from \"./types\";\r\n\r\nimport img1 from '../posts/img/1.jpg'\r\nimport bokutoPhoto from '../posts/img/bokuto.jpg'\r\nimport img2 from '../posts/img/2.jpg';\r\nimport kurooPhoto from '../posts/img/kurooLogo.png';\r\nimport kageyamaPhoto from '../posts/img/kageyamaLogo.jpg';\r\nimport img3 from '../posts/img/3.jpg';\r\nimport img4 from '../posts/img/4.jpg'\r\n\r\nlet initialAuthorState = {\r\n  name: \"\",\r\n  photo: bokutoPhoto,\r\n  nickname: \"@example.com\",\r\n  id:1,\r\n  content: {\r\n    text: '',\r\n  },\r\n  image: {\r\n    src: '',\r\n  },\r\n  date: {\r\n    day: '-',\r\n  },\r\n  comments: {\r\n    quantity: 0,\r\n  },\r\n  shares: {\r\n    quantity: 0,\r\n  },\r\n  likes: {\r\n    quantity: 0,\r\n  },\r\n  downloads: {\r\n    quantity: 0,\r\n  },\r\n};\r\n\r\nlet initialState = {\r\n    authors: [\r\n        {\r\n          name: \"ÐÐ¾ÐºÑÑÐ¾ ÐÐ°ÑÐ¸Ð»ÑÐ¾Ð²Ð¸Ñ\",\r\n          photo: bokutoPhoto,\r\n          nickname: \"@superowl2000@owl.com\",\r\n          id:1,\r\n          content: {\r\n            text: 'ÐÐ¿, ÐºÑÐ¾ÑÑÐ¾Ð²ÐµÑ.',\r\n          },\r\n          image: {\r\n            src: img1,\r\n          },\r\n          date: {\r\n            day: '1 Ð²ÐµÑÐµÑÐ½Ñ',\r\n          },\r\n          comments: {\r\n            quantity: 22,\r\n          },\r\n          shares: {\r\n            quantity: 22,\r\n          },\r\n          likes: {\r\n            quantity: 22,\r\n          },\r\n          downloads: {\r\n            quantity: 22,\r\n          },\r\n        },\r\n        {\r\n          name: \"ÐÑÑÐ¾ ÐÐ²Ð°Ð½Ð¾Ð²Ð¸Ñ\",\r\n          photo: kurooPhoto,\r\n          nickname: \"@kuroneko@nyan.com\",\r\n          id:2,\r\n          content: {\r\n            text: 'Ð Ð² Ð¼ÐµÐ½Ðµ Ñ Ð½ÑÑÐ½Ð° ÐºÐ°ÑÑÐ¸Ð½ÐºÐ°!',\r\n          },\r\n          image: {\r\n            src: img2,\r\n          },\r\n          date: {\r\n            day: '2 Ð²ÐµÑÐµÑÐ½Ñ',\r\n          },\r\n          comments: {\r\n            quantity: 22,\r\n          },\r\n          shares: {\r\n            quantity: 22,\r\n          },\r\n          likes: {\r\n            quantity: 22,\r\n          },\r\n          downloads: {\r\n            quantity: 22,\r\n          },\r\n        },\r\n        {\r\n          name: \"ÐÐ°Ð³ÐµÑÐ¼Ð° ÐÐ°Ð½Ð°ÑÐ¾Ð²Ð¸Ñ\",\r\n          photo: kageyamaPhoto,\r\n          nickname: \"@bestsetterever@king.com\",\r\n          id:3,\r\n          content: {\r\n            text: 'ÐÐÐ!!',\r\n          },\r\n          image: {\r\n            src: img3,\r\n          },\r\n          date: {\r\n            day: '3 Ð²ÐµÑÐµÑÐ½Ñ',\r\n          },\r\n          comments: {\r\n            quantity: 22,\r\n          },\r\n          shares: {\r\n            quantity: 22,\r\n          },\r\n          likes: {\r\n            quantity: 22,\r\n          },\r\n          downloads: {\r\n            quantity: 22,\r\n          },\r\n        },\r\n        {\r\n          name: \"ÐÐ°Ð³ÐµÑÐ¼Ð° ÐÐ°Ð½Ð°ÑÐ¾Ð²Ð¸Ñ\",\r\n          photo: kageyamaPhoto,\r\n          nickname: \"@bestsetterever@king.com\",\r\n          id:4,\r\n          content: {\r\n            text: 'ÐÐ°Ð¿Ð¸ÑÑÑÑ Ð¼ÐµÐ½Ñ, Ð¼Ð¾Ð¶Ñ ÑÐºÐ¸Ð½ÑÑÐ¸ ÑÐµ ÑÑÐ»Ñ Ð¿Ð°ÑÐºÑ ÑÐ°ÐºÐ¸Ñ ÐºÐ°ÑÑÐ¸Ð½Ð¾Ðº!',\r\n          },\r\n          image: {\r\n            src: img4,\r\n          },\r\n          date: {\r\n            day: '3 Ð²ÐµÑÐµÑÐ½Ñ',\r\n          },\r\n          comments: {\r\n            quantity: 22,\r\n          },\r\n          shares: {\r\n            quantity: 22,\r\n          },\r\n          likes: {\r\n            quantity: 22,\r\n          },\r\n          downloads: {\r\n            quantity: 22,\r\n          },\r\n        },\r\n    ],\r\n    \r\n}\r\n\r\nexport const addPostReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_POST:\r\n          return {\r\n            ...state,\r\n            authors: [\r\n              {\r\n                ...initialAuthorState,\r\n                name: action.payload.name,\r\n                content: {\r\n                  ...initialAuthorState.content,\r\n                  ...action.payload.content\r\n                },\r\n                image: {\r\n                  ...initialAuthorState.image,\r\n                  ...action.payload.image\r\n                }\r\n              },\r\n              ...state.authors\r\n            ]\r\n          }\r\n    }\r\n    return state;\r\n}\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport { addPostReducer } from \"./redux/add-post-reducer\";\r\nimport { postInteractionsReducer } from './redux/post-interactions-reducer';\r\n\r\nconst reducer = combineReducers({\r\n    addPostReducer,\r\n    postInteractionsReducer,\r\n})\r\n\r\nconst store = createStore(\r\n\r\n    reducer,\r\n\r\n)\r\n\r\nexport default store;","import { INCREMENT, DECREMENT } from \"./types\";\r\n\r\nexport const postInteractionsReducer = (state = [], action) => {\r\n    const newState = state;\r\n    switch (action.type) {\r\n        case \"INCREMENT\": {\r\n            newState.authors = {...action.element};\r\n            return newState.element + 1;           \r\n            }\r\n        case \"DECREMENT\": {\r\n            newState.rights = {...action.rights};\r\n            return newState.element + 1;\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store = { store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}